num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication
) %>%
bind_cols(sim_result)
return(result)
}
)
tictoc::toc()
sim_param %>%
# sample_n(30) %>%
slice(c(1:5))
tictoc::tic()
result <- sim_param %>%
# sample_n(30) %>%
slice(c(1:5)) %>%
as.list() %>%
furrr::future_pmap_dfr(
.options = furrr::future_options(seed = TRUE),
.f = function( num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication){
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(PROB, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
result <- tibble(
num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication
) %>%
bind_cols(sim_result)
return(result)
}
)
tictoc::toc()
sim_param %>%
# sample_n(30) %>%
slice(c(1:5))
sim_param %>%
sample_n(30)
sim_param %>%
sample_n(30) %>%
# slice(c(1:5)) %>%
as.list()
sim_param %>%
# sample_n(30) %>%
slice(c(1:5)) %>%
as.list()
tictoc::tic()
result <- sim_param %>%
sample_n(30) %>%
# slice(c(1:5)) %>%
as.list() %>%
furrr::future_pmap_dfr(
.options = furrr::future_options(seed = TRUE),
.f = function( num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication){
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(PROB, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
result <- tibble(
num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication
) %>%
bind_cols(sim_result)
return(result)
}
)
tictoc::toc()
result <- sim_param %>%
sample_n(30) %>%
# slice(c(1:5)) %>%
as.list() %>%
# furrr::future_pmap_dfr(
purrr::pmap_dfr(
# .options = furrr::future_options(seed = TRUE),
.f = function( num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication){
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(PROB, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
result <- tibble(
num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication
) %>%
bind_cols(sim_result)
return(result)
}
)
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
B=1
num_pert <- 0.2
N <- 50
PROB <- 0.5
k <- 2
sigma <- 1
p <- 50
m <- 50
s <-5
R <- 1
B <- 1
replication <- 1
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(PROB, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
num_pert <- 0.2
N <- 50
PROB <- 0.5
k <- 3
sigma <- 1
p <- 50
m <- 50
s <-5
R <- 1
B <- 1
replication <- 1
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(PROB, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
num_pert <- params %>% purrr::pluck("num_pert")
chains <- params %>% purrr::pluck("chains")
lam <- params %>% purrr::pluck("lam")
maxiter <- params %>% purrr::pluck("maxiter")
N <- params %>% purrr::pluck("N")
prob <- params %>% purrr::pluck("prob")
k <- params %>% purrr::pluck("k")
nvld <- params %>% purrr::pluck("nvld")
rho <- params %>% purrr::pluck("rho")
sigma <- params %>% purrr::pluck("sigma")
p <- params %>% purrr::pluck("p")
m <- params %>% purrr::pluck("m")
s <- params %>% purrr::pluck("s")
r <- params %>% purrr::pluck("r")
b <- params %>% purrr::pluck("b")
num_pert <- (num_pert*N) %>% floor()
int <- prob %>% cumsum()
rand_assign <- runif(N)
names <- paste0("c_",1:k)
if(k*s > p){print("FOR SEPARATION, VERIFY THAT K*S < P")}
clust_assign_true <- (rand_assign) %>%
purrr::map_int(.f = function(.x){
clust <- (.x <= int) %>%
which() %>%
min()
return(clust)
}) %>%
sort()
clust_assign_true_key <- clust_assign_true %>%
tibble() %>%
mutate(order = 1:N) %>%
arrange((.))
clust_assign_true_vec <- clust_assign_true_key %>%
pull(order)
n <- clust_assign_true %>%
as_tibble() %>%
group_by(value) %>%
summarize(n = n()) %>%
pull(n)
gamma_store <- as_tibble(matrix(rep(0,k),nrow=1)) %>%
rename_if(is.numeric,~names) %>%
mutate(w_ll = 0, iter = 0)
# chain_store <- tibble(obs = 0, assign = 0, llik = 0, chain = 0)
clust_iter <<- 1
clust_min <<- 1
clust_max <<- s
data_k <- n %>%
list(r,rho,b) %>%
purrr::pmap(.f = function(.n,.r,.rho,.b){
a_rows <- clust_min:clust_max
clust_iter <<- clust_iter + 1
clust_min <<- clust_max+1
clust_max <<- clust_iter*s
sim <- sim_sarrs(.n,nvld,.n,a_rows,p,m,.r,.rho,sigma,.b)
A <- sim %>%
purrr::pluck("A")
S <- sim %>%
purrr::pluck("sig")
X <- sim %>%
purrr::pluck("X")
Y <- sim %>%
purrr::pluck("Y")
return(list(X=X,Y=Y,A=A,S=S))
})
n %>%
list(r,rho,b)
clust_assign_true
rand_assign
int
prob
prob
prob <- rep(1/k, k)
prob
num_pert <- 0.2
N <- 50
PROB <- 0.5
k <- 3
sigma <- 1
p <- 50
m <- 50
s <-5
R <- 1
B <- 1
replication <- 1
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(1/k, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
library(dplyr)
future::plan("multisession",workers = 7)
source("./functions/20210205_sarrs_alex.R")
source("./simulations/20210304_large_sim_alex.R")
set.seed(19921124)
num_pert <- c(0.05,0.1,0.2)
N <- c(50, 100, 200, 400)
PROB <- 0.5
k <- 2:8
sigma <- c(0.5,1,2)
p <- c(50, 100, 1000, 10000)
m <- c(50, 100, 1000, 10000)
s <- c(5, 10, 20)
R <- 1:5
B <- c(1, 5, 10)
replication <- 1:2
sim_param <- expand.grid(
num_pert = num_pert,
N = N,
PROB = PROB,
k = k,
sigma = sigma,
p = p,
m = m,
s = s,
R = R,
B = B,
replication = replication
)
tictoc::tic()
result <- sim_param %>%
sample_n(30) %>%
# slice(c(1:5)) %>%
as.list() %>%
furrr::future_pmap_dfr(
# purrr::pmap_dfr(
.options = furrr::future_options(seed = TRUE),
.f = function( num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication){
chains <- 100
lam <- 1
maxiter <- 100
nvld <- 1e4
rho <- rep(0,k)
b <- rep(B, k)
r <- rep(R, k)
prob <- rep(1/k, k)
params <- list(
chains = chains,
lam = lam,
maxiter = maxiter,
nvld = nvld,
num_pert = num_pert,
N = N,
prob = prob,
k = k,
sigma = sigma,
p = p,
rho = rho,
m = m,
s = s,
r = r,
b = b)
sim_result <- simulate_hthmix(params)
result <- tibble(
num_pert,
N,
PROB,
k,
sigma,
p,
m,
s,
R,
B,
replication
) %>%
bind_cols(sim_result)
return(result)
}
)
tictoc::toc()
18489.7/60
18489.7/3600
result
