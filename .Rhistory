clust_iter <- 1
clust_min <- 1
clust_max <- s
x <- NULL
y <- NULL
for(i in 1:k){
a_rows <- clust_min:clust_max
clust_iter <- clust_iter + 1
clust_min <- clust_max+1
clust_max <- clust_iter*s
sim <- fct_sim_mixrrr(n[i],a_rows,p,m,r[i],rho[i],sigma,b[i])
x <- x %>% rbind(sim$X)
y <- y %>% rbind(sim$Y)
}
x <- x[clust_assign_true_vec,]
y <- y[clust_assign_true_vec,]
clust_assign_true_vec
n
k
k <- 2
clust_iter <- 1
clust_min <- 1
clust_max <- s
x <- NULL
y <- NULL
for(i in 1:k){
a_rows <- clust_min:clust_max
clust_iter <- clust_iter + 1
clust_min <- clust_max+1
clust_max <- clust_iter*s
sim <- fct_sim_mixrrr(n[i],a_rows,p,m,r[i],rho[i],sigma,b[i])
x <- x %>% rbind(sim$X)
y <- y %>% rbind(sim$Y)
}
x <- x[clust_assign_true_vec,]
y <- y[clust_assign_true_vec,]
dim(x)
dim(y)
document()
check()
document()
check()
?where
1:3 %>% tibble()
1:3 %>% tibble() %>% mutate(.data = 1)
1:3 %>% tibble() %>% mutate(. = 1)
1:3 %>% tibble() %>% dplyr::mutate(.=1)
1:3 %>% tibble()
1:3 %>% tibble() %>% mutate(.=.)
1:3 %>% tibble() %>% mutate(.=1)
1:3 %>% tibble() %>% mutate(.=3:6)
1:3 %>% tibble() %>% mutate(.=c(3:6))
1:3 %>% tibble() %>% mutate(.data=1:3)
1:3 %>% tibble() %>% mutate(.data=.data)
test <- 1:3 %>% tibble()
test
test %>% mutate(tester = 4)
test %>% mutate(tester = 4,.data = 4)
test %>% mutate(tester = 4,.data = .data)
document()
check()
lik <- 1:3
((lik %>% dplyr::lead())/lik) %>% .[!is.na(.)]
((lik %>% dplyr::lead())/lik) %>% .data[!is.na(.data)]
(lik %>% dplyr::lead())/lik)
((lik %>% dplyr::lead())/lik)
((lik %>% dplyr::lead())/lik) %>% .data[!is.na(.data)]
((lik %>% dplyr::lead())/lik) %>% .[!is.na(.)]
((lik %>% dplyr::lead())/lik)
((lik %>% dplyr::lead())/lik)
((lik %>% dplyr::lead())/lik) %>% (.)[!is.na(.)]
((lik %>% dplyr::lead())/lik) %>% .[!is.na(.)]
((lik %>% dplyr::lead())/lik)[!is.na(.)]
((lik %>% dplyr::lead())/lik) %>% .[!is.na(.)]
install()
?install_github
N <- c(50,100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,100,200)
s <- c(5,10,20)
r <- 1:2
rep <- 1:20
expand.grid(N,k,sigma,dim,s,r,rep)
expand.grid(N,k,sigma,dim,s,r,rep) %>% nrow()
N <- c(50,100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
expand.grid(N,k,sigma,dim,s,r,rep) %>% nrow()
grid <- list(expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))
grid %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
print(.N)
})
grid
grid$N
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
print(.N)
})
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 1e3,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = c(0,0),
m = .dim,
s = .s,
r = rep(.r,.k),
b = c(5,10))
print(params)
})
?ifelse
ifelse(k==2,c(5,10),c(5,10,20))
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
slice(1) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
grid
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
debugSource("G:/My Drive/Dissertation/HTH Mixture/hthmixture/R/fct_hthmix_comp.R")
load_all()
rm(list = c("fct_hthmix_comp"))
load_all()
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
debugSource("G:/My Drive/Dissertation/HTH Mixture/hthmixture/R/fct_hthmix_comp.R")
debugSource("G:/My Drive/Dissertation/HTH Mixture/hthmixture/R/fct_hthmix_comp.R")
load_all()
rm(list = c("fct_hthmix_comp"))
load_all()
rm(list=ls())
source("G:/My Drive/Dissertation/HTH Mixture/hthmixture/R/fct_hthmix_comp.R")
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
load_all()
rm(list = c("fct_hthmix_comp"))
load_all()
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
N <- c(50,100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
library(dplyr)
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
load_all()
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
warnings()
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
dim(x)
dim(y)
x
y
maxiter
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
N <- c(100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
grid
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
dim(x)
dim(y)
x
y
hthmix(x,y,maxiter=2)
load_all()
load_all()
rm(list=ls())
load_all()
source("G:/My Drive/Dissertation/HTH Mixture/hthmixture/R/fct_gamma.R")
load_all()
rm(list = c("fct_gamma"))
N <- c(100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
library(devtools)
load_all()
N <- c(100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
N <- c(100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
dim(X_k)
load_all()
N <- c(100,200)
k <- 2:3
sigma <- 1:2
dim <- c(50,200)
s <- c(10,20)
r <- 1:2
rep <- 1:10
grid <- (expand.grid(N=N,k=k,sigma=sigma,dim=dim,s=s,r=r,rep=rep))[1,]
list(grid$N, grid$k, grid$sigma, grid$dim, grid$s, grid$r, grid$rep) %>%
purrr::pmap(.f = function(.N, .k, .sigma, .dim, .s, .r, .rep){
params <- list(
maxiter = 2,
N = .N,
k = .k,
sigma = .sigma,
p = .dim,
rho = rep(0,.k),
m = .dim,
s = .s,
r = rep(.r,.k),
b = ifelse(k==2,c(5,10),c(5,10,20)))
fct_simulate_run(params)
})
