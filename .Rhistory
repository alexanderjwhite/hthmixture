y_k <- y[cluster_rows, ]
eta_k <- sqrt(2*m) + sqrt(2*min(n_k,p))
set.seed(1)
clust_assign <- fct_initialize(k, N)
p <- dim(x)[2]
m <- dim(y)[2]
val_frac <- 0.2
grid <- seq(-5,4,1)
gamma <- NULL
A <- NULL
sig_vec <- NULL
i <- 1
cluster_rows <- which((clust_assign==i))
n_k <- length(cluster_rows)
x_k <- x[cluster_rows,]
y_k <- y[cluster_rows, ]
eta_k <- sqrt(2*m) + sqrt(2*min(n_k,p))
sigma_hat <- fct_sigma(y_k, n_k, m)
rank_hat <- fct_rank(x_k, y_k, sigma_hat, eta_k)
lam_univ <- fct_lambda(sigma_hat, p, n_k)
lam_univ
#V1
# equally spaced between (0,lam bar)
lambar <- 2*sigma_hat
2*sigma_hat
dim(x)
norm(x, type = "2")
#V1
# equally spaced between (0,lam bar)
apply(x, 1, ~norm(., type = "2"))
#V1
# equally spaced between (0,lam bar)
apply(x, 1, norm(., type = "2"))
#V1
# equally spaced between (0,lam bar)
apply(x, 1, norm(type = "2"))
#V1
# equally spaced between (0,lam bar)
apply(x, 1, ~function(.x){norm(.x,1,type = "2")})
#V1
# equally spaced between (0,lam bar)
apply(x, 1, function(.x){norm(.x,1,type = "2")})
#V1
# equally spaced between (0,lam bar)
apply(x, 1, function(.x){norm(.x,type = "2")})
#V1
# equally spaced between (0,lam bar)
apply(x, 1, function(.x){norm(.x,type = "2")}) %>% length(0)
#V1
# equally spaced between (0,lam bar)
apply(x, 1, function(.x){norm(.x,type = "2")}) %>% length()
dim(x)
#V1
# equally spaced between (0,lam bar)
apply(x, 2, function(.x){norm(.x,type = "2")}) %>% length()
#V1
# equally spaced between (0,lam bar)
max(apply(x, 2, function(.x){norm(.x,type = "2")}))
#V1
# equally spaced between (0,lam bar)
max_norm <- max(apply(x, 2, function(.x){norm(.x,type = "2")}))
lambar <- 2*sigma_hat*max_norm*(sqrt(rank_hat)+2*sqrt(log(p)))
lambar
?seq
seq_1 <- seq(0,max_norm,length.out=50)
seq_1
seq_1 <- seq(0,max_norm,length.out=51)[-1]
seq_1
seq_1 <- seq(0,lambar,length.out=51)[-1]
seq_1
# v2
s2 <- seq(-5,4,length.out=50)
s2
seq_2 <- (2^s2)*lam_univ
seq_2
seq_1
seq_2
models <- NULL
seq_1 <- seq(0,lambar,length.out=11)[-1]
seq_1
seq_1 <- seq(0,lambar,length.out=11)[-1]
models <- NULL
errors <- rep(0,length(seq_1))
val_size <- ifelse((val_frac*n_k) < 1, (n_k*0.5), (val_frac*n_k))
val_rows <- sample(1:length(cluster_rows), size = val_size)
train_rows <- which(!((1:length(cluster_rows)) %in% val_rows))
x_train <- x_k[train_rows,]
x_test <- x_k[val_rows,]
y_train <- y_k[train_rows,]
y_test <- y_k[val_rows]
alpha
alpha <- 0
beta <- 0
sigma_hat
models <- NULL
errors <- rep(0,length(seq_1))
for (j in 1:length(seq_1)){
print(j/length(lam_grid))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_1[j], alpha, beta, sigma_hat, "grLasso")
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
models <- c(models,list(model_j))
}
models <- NULL
errors <- rep(0,length(seq_1))
for (j in 1:length(seq_1)){
print(j/length(seq_1))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_1[j], alpha, beta, sigma_hat, "grLasso")
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
models <- c(models,list(model_j))
}
errors
models
fct_sarrs
#V1
# equally spaced between (0,lam bar)
max_norm <- max(apply(x, 2, function(.x){norm(.x,type = "2")}))
lambar <- 2*sigma_hat*max_norm*(sqrt(rank_hat)+2*sqrt(log(p)))
seq_1 <- seq(0,lambar,length.out=11)[-1]
models <- NULL
errors <- rep(0,length(seq_1))
for (j in 1:length(seq_1)){
print(j/length(seq_1))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_1[j], alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
models <- c(models,list(model_j))
}
errors
models <- NULL
errors <- rep(0,length(seq_2))
for (j in 1:length(seq_2)){
print(j/length(seq_2))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_2[j], alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
models <- c(models,list(model_j))
}
# v2
s2 <- seq(-5,4,length.out=10)
seq_2 <- (2^s2)*lam_univ
models <- NULL
errors <- rep(0,length(seq_2))
for (j in 1:length(seq_2)){
print(j/length(seq_2))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_2[j], alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
models <- c(models,list(model_j))
}
errors
errors1 <- errors
s2
s2 <- seq(4,15,length.out=11)[-1]
s2
s2 <- seq(5,15,length.out=10)
s2
seq_2 <- (2^s2)*lam_univ
models <- NULL
errors <- rep(0,length(seq_2))
for (j in 1:length(seq_2)){
print(j/length(seq_2))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_2[j], alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
models <- c(models,list(model_j))
}
errors
model_j <- fct_sarrs(y_train, x_train, rank_hat, 1e5, alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
errors1
model_j <- fct_sarrs(y_train, x_train, rank_hat, 0, alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
errors1
plot(errors1)
results
results_raw <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_31_01/summary.csv", sep = " ")
colnames(results_raw) <- c("seed", "time", "likelihood")
results <- results_raw %>%
as_tibble()
results
results %>% slice_max(order_by = likelihood, n = 3)
#V1
# equally spaced between (0,lam bar)
max_norm <- max(apply(x, 2, function(.x){norm(.x,type = "2")}))
lambar <- 2*sigma_hat*max_norm*(sqrt(rank_hat)+2*sqrt(log(p)))
seq_1 <- seq(0,lambar,length.out=51)[-1]
seq_1
models <- NULL
errors <- rep(0,length(seq_1))
for (j in 1:length(seq_1)){
print(j/length(seq_1))
model_j <- fct_sarrs(y_train, x_train, rank_hat, seq_1[j], alpha, beta, sigma_hat, "grLasso", y_sparse = FALSE)
errors[j] <- mean((y_test-(cbind(x_test,1) %*% model_j$Ahat))^2)
print(errors[j])
models <- c(models,list(model_j))
}
results_raw <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_31_02/summary.csv", sep = " ")
colnames(results_raw) <- c("seed", "time", "likelihood")
results <- results_raw %>%
as_tibble()
results %>% slice_max(order_by = likelihood, n = 3)
model <- readRDS("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_31_02/output/iu_hthmix_3.rds")
# model2 <- readRDS("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_30_01/output/iu_hthmix_3.rds")
best_assign <- model$models[[1]]$assign
data_recode <- dat.demo %>%
as_tibble() %>%
mutate(DX = recode(DX, CN = "Cognitive \nNormal", MCI = "Mild Cognitive \nImpairment", Dementia = "Dementia"))
p1 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = CDRSB_bl)) +
xlab("Cluster") +
ylab("Clinical Dementia Rating")
p1
p2 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = ADAS11_bl)) +
xlab("Cluster") +
ylab("11 item-AD Cognitive Scale")
p2
p3 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = ADAS13_bl)) +
xlab("Cluster") +
ylab("13 item-AD Cognitive Scale")
p3
p4 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = FAQ_bl)) +
xlab("Cluster") +
ylab("Functional Activities Questionnaire")
p5 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = MMSE_bl)) +
xlab("Cluster") +
ylab("Mini-Mental State Examination")
p6 <- data_recode %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_bar(aes(x = clust, fill = DX)) +
scale_fill_brewer(palette = "Dark2", name = "") +
xlab("Cluster")  +
ylab("Diagnosis Count") +
theme(legend.position="top")
grid.arrange(p1,p2,p3,p4,p5,p6, ncol=3)
document()
model_j
s_mean
# alpha <- 2*sqrt(3)
# beta <- 1
# alpha <- 0
# beta <- 0
s_mean <- purrr::safely(mean)
(y_test-(cbind(x_test,1) %*% model_j$Ahat))^2
dim(cbind(x_test,1))
dim(model_j$Ahat)
s_mean((y_test-(cbind(x_test) %*% model_j$Ahat))^2)
error_j <- s_mean((y_test-(cbind(x_test) %*% model_j$Ahat))^2)
ifelse(is.null(error_j$result), Inf, error_j$result)
document()
document()
load_all()
results_raw <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_01_02/summary.csv", sep = " ")
colnames(results_raw) <- c("seed", "time", "likelihood")
results <- results_raw %>%
as_tibble()
results %>% slice_max(order_by = likelihood, n = 3)
model <- readRDS("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_01_02/output/iu_hthmix_77.rds")
# model2 <- readRDS("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_30_01/output/iu_hthmix_3.rds")
best_assign <- model$models[[1]]$assign
data_recode <- dat.demo %>%
as_tibble() %>%
mutate(DX = recode(DX, CN = "Cognitive \nNormal", MCI = "Mild Cognitive \nImpairment", Dementia = "Dementia"))
p1 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = CDRSB_bl)) +
xlab("Cluster") +
ylab("Clinical Dementia Rating")
p1
p2 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = ADAS11_bl)) +
xlab("Cluster") +
ylab("11 item-AD Cognitive Scale")
p2
p3 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = ADAS13_bl)) +
xlab("Cluster") +
ylab("13 item-AD Cognitive Scale")
p3
p4 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = FAQ_bl)) +
xlab("Cluster") +
ylab("Functional Activities Questionnaire")
p5 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = MMSE_bl)) +
xlab("Cluster") +
ylab("Mini-Mental State Examination")
p6 <- data_recode %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_bar(aes(x = clust, fill = DX)) +
scale_fill_brewer(palette = "Dark2", name = "") +
xlab("Cluster")  +
ylab("Diagnosis Count") +
theme(legend.position="top")
grid.arrange(p1,p2,p3,p4,p5,p6, ncol=3)
grid.arrange(p1,p2,p3,p4,p5,p6, ncol=3)
results_raw <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_01_03/summary.csv", sep = " ")
colnames(results_raw) <- c("seed", "time", "likelihood")
results <- results_raw %>%
as_tibble()
results %>% slice_max(order_by = likelihood, n = 3)
model <- readRDS("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_01_03/output/iu_hthmix_17.rds")
# model2 <- readRDS("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_30_01/output/iu_hthmix_3.rds")
best_assign <- model$models[[1]]$assign
data_recode <- dat.demo %>%
as_tibble() %>%
mutate(DX = recode(DX, CN = "Cognitive \nNormal", MCI = "Mild Cognitive \nImpairment", Dementia = "Dementia"))
p1 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = CDRSB_bl)) +
xlab("Cluster") +
ylab("Clinical Dementia Rating")
p1
p2 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = ADAS11_bl)) +
xlab("Cluster") +
ylab("11 item-AD Cognitive Scale")
p2
p3 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = ADAS13_bl)) +
xlab("Cluster") +
ylab("13 item-AD Cognitive Scale")
p3
p4 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = FAQ_bl)) +
xlab("Cluster") +
ylab("Functional Activities Questionnaire")
p5 <- dat.demo %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_boxplot(aes(x = clust, y = MMSE_bl)) +
xlab("Cluster") +
ylab("Mini-Mental State Examination")
p6 <- data_recode %>%
bind_cols(tibble(clust = as.factor(best_assign))) %>%
ggplot() +
geom_bar(aes(x = clust, fill = DX)) +
scale_fill_brewer(palette = "Dark2", name = "") +
xlab("Cluster")  +
ylab("Diagnosis Count") +
theme(legend.position="top")
grid.arrange(p1,p2,p3,p4,p5,p6, ncol=3)
results
results %>% slice_max(order_by = likelihood, n = 3)
results_raw <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_01_03/summary.csv", sep = " ")
colnames(results_raw) <- c("seed", "time", "likelihood")
results <- results_raw %>%
as_tibble()
results %>% slice_max(order_by = likelihood, n = 3)
results_raw <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_01_03/summary.csv", sep = " ")
colnames(results_raw) <- c("seed", "time", "likelihood")
results <- results_raw %>%
as_tibble()
results %>% slice_max(order_by = likelihood, n = 3)
m
p
n_k
sqrt(2*m) + sqrt(2*min(n_k,p))
sigma_hat
sigma=sigma_hat
eta
eta=eta_k
sigma*eta
x_k
m <- t(x)%*%x
m_inv <- MASS::ginv(m)
p <- x%*%m_inv%*%t(x)
sv <- svd(p%*%y)$d
sv >= sigma*eta
which(sv >= sigma*eta)
sv
# results
# results_old <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_07_26_02/summary.csv")
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
# results
# results_old <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_07_26_02/summary.csv")
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
results
# results
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_07_26_02/summary.csv")
# results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
# colnames(results_old) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
View(results)
library(hthmixture)
N <- 100
k <- 2
rho <- 0.1
sigma <- 1
p <- 50
m <- 75
s_x <- 10
s_y <- 10
rank <- 2
b <- 1
M <- 10
times <- rep(0,M)
aris <- rep(0,M)
set.seed(1)
for (i in 1:M){
print(paste("rep: ",i, "########################"))
sim <- fct_simulate(N, k, rho, sigma, p, m, s_x, s_y, rank, b)
start_time <- Sys.time()
model <- hthmix(sim$x, sim$y, k = k, nstart = 10)
comp_time <- Sys.time()
clust <- model$assign
true <- sim$true
clust_reorder <- clue::solve_LSAP(table(true, clust), maximum = TRUE)[clust]
out_string <- paste0("/N/project/zhangclab/alex/hthmix/iu_2022_07_26_01/output/iu_hthmix_",N, "_",k,"_", rho,"_",sigma,"_",p,"_",m,"_",s_x,"_",s_y,"_",rank,"_",b,".rds")
times[i] <- difftime(comp_time, start_time, units = "secs")
aris[i] <- mclust::adjustedRandIndex(true, clust_reorder)
}
result <- tibble(N = N,
k = k,
rho = rho,
sigma = sigma,
p = p,
m = m,
s_x = s_x,
s_y = s_y,
rank = rank,
b = b,
model = list(model),
ari = list(aris),
ari_mean = mean(aris),
ari_sd = sd(aris),
time = list(times),
time_mean = mean(times),
time_sd = sd(times)
)
# results
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_07_27_02/summary.csv")
# results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
# colnames(results_old) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
View(results)
# results
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_07_27_01/summary.csv")
# results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
# colnames(results_old) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
View(results)
document()
# results
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_08_01/summary.csv")
# results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
# colnames(results_old) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
View(results)
# results
results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_09_11_01/summary.csv")
# results <- read.table("G:/My Drive/Dissertation/HTH Mixture/iu_2022_08_25_01/summary.csv")
colnames(results) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
# colnames(results_old) <- c("N", "k", "rho", "sigma", "p", "m", "s_x", "s_y", "rank", "b", "ari_mean", "ari_sd", "time_mean", "time_sd")
View(results)
results %>%
filter(rank < 3) %>%
View()
library(dplyr)
results %>%
filter(rank < 3) %>%
View()
results %>%
filter(rank < 3) %>%
View()
900+(3*75)
1125*500*30
1125*500*30/60
(900+(3*75))*30/60
(900+(3*75))*30/3600
(900+(3*75))*30*5/3600
model <- lm(ari_mean ~ k + rho + s_x + s_y + rank, data = results)
summary(model)
results %>%
filter(rank < 3, rho == 0.1, k == 2, rank %in% c(1,2)) %>%
View()
results %>%
filter(rank < 3, rho == 0.9, k == 2, rank %in% c(1,2)) %>%
View()
?MASS::mvrnorm
results %>%
filter(rank < 3, rho == 0.9, k == 2, rank %in% c(1)) %>%
View()
